---
- name: Check if cluster-info ConfigMap exists
  ansible.builtin.command:
    cmd: "kubectl get configmap -n kube-public --kubeconfig={{ kubeadm_admin_conf_file }} -o custom-columns=NAME:.metadata.name"
  register: kubeadm_cluster_cm_infos
  changed_when: false

- name: Check if bootstrap token exists
  ansible.builtin.shell:
    cmd: |
      set -o pipefail |
      kubeadm token list |
      awk '{ print $1 }'
  changed_when: false
  register: kubeadm_bootstrap_tokens

- name: Generates bootstrap tokens used to join a node to a cluster
  become: true
  notify: Set bootstrap token variable
  ansible.builtin.command:
    cmd: kubeadm init phase bootstrap-token
  register: kubeadm_generated_bootstrap_token
  when: >
    ("cluster-info" not in kubeadm_cluster_cm_infos.stdout_lines) or
    (kubeadm_bootstrap_tokens.stdout_lines | length == 0)
  changed_when: true

- name: Set token
  ansible.builtin.meta: flush_handlers

- name: Set bootstrap token variable - existing token
  when: not kubeadm_generated_bootstrap_token.changed
  ansible.builtin.set_fact:
    kubeadm_bootstrap_token: "{{ kubeadm_bootstrap_tokens.stdout_lines[1] }}"
